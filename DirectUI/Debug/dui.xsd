<!-- edited with XMLSpy v2010 rel. 3 sp1 (http://www.altova.com) by MESMERiZE (MSM) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.venpoo.com/duilib dui.xsd">
	<xs:simpleType name="Side">
		<xs:restriction base="xs:string">
			<xs:enumeration value="left"/>
			<xs:enumeration value="top"/>
			<xs:enumeration value="right"/>
			<xs:enumeration value="bottom"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AlignH">
		<xs:restriction base="xs:string">
			<xs:enumeration value="left"/>
			<xs:enumeration value="center"/>
			<xs:enumeration value="right"/>
			<xs:enumeration value="stretch"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AlignV">
		<xs:restriction base="xs:string">
			<xs:enumeration value="top"/>
			<xs:enumeration value="center"/>
			<xs:enumeration value="bottom"/>
			<xs:enumeration value="stretch"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Size">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d*,\d*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Color">
		<xs:restriction base="xs:string">
			<xs:pattern value="#[a-fA-F0-9]{8}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Rect">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d*,\d*,\d*,\d*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Window">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element name="Image">
						<xs:complexType>
							<xs:attribute name="name" type="xs:string" use="required"/>
							<xs:attribute name="restype" type="xs:integer"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="Font">
						<xs:complexType>
							<xs:attribute name="name" type="xs:string" use="required"/>
							<xs:attribute name="size" type="xs:integer" use="required"/>
							<xs:attribute name="underline" type="xs:boolean"/>
							<xs:attribute name="italic" type="xs:boolean"/>
							<xs:attribute name="default" type="xs:boolean"/>
							<xs:attribute name="defaultbold" type="xs:boolean"/>
							<xs:attribute name="defaultlink" type="xs:boolean"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="Default">
						<xs:complexType>
							<xs:attribute name="name" use="required"/>
							<xs:attribute name="value" type="xs:string" use="required"/>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:group ref="MainGroup" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="size" type="Size"/>
			<xs:attribute name="sizebox" type="Rect"/>
			<xs:attribute name="caption" type="Rect"/>
			<xs:attribute name="roundcorner" type="Rect"/>
			<xs:attribute name="mininfo" type="Size"/>
			<xs:attribute name="showdirty" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:group name="ElementGroup">
		<xs:choice>
			<xs:element name="Element" type="Element"/>
			<xs:element name="Control" type="Control"/>
			<xs:element name="TextBlock" type="TextBlock"/>
			<xs:element name="HtmlBlock" type="TextBlock"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ContentControlGroup">
		<xs:choice>
			<xs:element name="ContentControl" type="ContentControl"/>
			<xs:element name="Label" type="ContentControl"/>
			<xs:element name="Button" type="Button"/>
			<xs:element name="Option" type="Option"/>
			<xs:element name="Progress" type="Progress"/>
			<xs:element name="Edit" type="Edit"/>
			<xs:element name="Scrollbar" type="Scrollbar"/>
			<xs:element name="ScrollViewer" type="ScrollViewer"/>
			<xs:element name="MenuButton" type="Button"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ContainerGroup">
		<xs:choice>
			<xs:element name="Container" type="Container"/>
			<xs:element name="VerticalLayout" type="Container"/>
			<xs:element name="HorizontalLayout" type="Container"/>
			<xs:element name="DockLayout" type="DockLayout"/>
		</xs:choice>
	</xs:group>
	<xs:group name="MainGroup">
		<xs:choice>
			<xs:group ref="ElementGroup"/>
			<xs:group ref="ContentControlGroup"/>
			<xs:group ref="ContainerGroup"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="Element">
		<xs:attribute name="pos" type="Rect"/>
		<xs:attribute name="padding" type="Rect"/>
		<xs:attribute name="width" type="xs:integer"/>
		<xs:attribute name="height" type="xs:integer"/>
		<xs:attribute name="minwidth" type="xs:integer"/>
		<xs:attribute name="minheight" type="xs:integer"/>
		<xs:attribute name="maxwidth" type="xs:integer"/>
		<xs:attribute name="maxheight" type="xs:integer"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="tooltip" type="xs:string"/>
		<xs:attribute name="userdata" type="xs:string"/>
		<xs:attribute name="enabled" type="xs:boolean"/>
		<xs:attribute name="mouse" type="xs:boolean"/>
		<xs:attribute name="visible" type="xs:boolean"/>
		<xs:attribute name="shortcut">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="\c"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="canfocus" type="xs:boolean"/>
		<xs:attribute name="verticalalignment" type="AlignV"/>
		<xs:attribute name="horizontalalignment" type="AlignH"/>
		<xs:attribute name="dockside" type="Side"/>
		<xs:attribute name="sharename" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="Control">
		<xs:complexContent>
			<xs:extension base="Element">
				<xs:attribute name="inset" type="Rect"/>
				<xs:attribute name="bkcolor" type="Color"/>
				<xs:attribute name="bkcolor2" type="Color"/>
				<xs:attribute name="bordercolor" type="Color"/>
				<xs:attribute name="bordersize" type="Rect"/>
				<xs:attribute name="bkimage" type="xs:string"/>
				<xs:attribute name="tabstop" type="xs:boolean"/>
				<xs:attribute name="notusedefskin" type="xs:boolean"/>
				<xs:attribute name="verticalcontentalignment" type="AlignV"/>
				<xs:attribute name="horizontalcontentalignment" type="AlignH"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ContentControl">
		<xs:complexContent>
			<xs:extension base="Control">
				<xs:group ref="MainGroup" minOccurs="0"/>
				<xs:attribute name="text" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TextBlock">
		<xs:complexContent>
			<xs:extension base="Element">
				<xs:attribute name="text" type="xs:string"/>
				<xs:attribute name="font" type="xs:integer"/>
				<xs:attribute name="textcolor" type="Color"/>
				<xs:attribute name="disabledtextcolor" type="Color"/>
				<xs:attribute name="multiline" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Button">
		<xs:complexContent>
			<xs:extension base="ContentControl">
				<xs:attribute name="normalimage" type="xs:string"/>
				<xs:attribute name="hotimage" type="xs:string"/>
				<xs:attribute name="pushedimage" type="xs:string"/>
				<xs:attribute name="focusedimage" type="xs:string"/>
				<xs:attribute name="disabledimage" type="xs:string"/>
				<xs:attribute name="handuse" type="xs:boolean"/>
				<xs:attribute name="wantreturn" type="xs:boolean"/>
				<xs:attribute name="wantspace" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Option">
		<xs:complexContent>
			<xs:extension base="Button">
				<xs:attribute name="group" type="xs:boolean"/>
				<xs:attribute name="selected" type="xs:boolean"/>
				<xs:attribute name="selectedimage" type="xs:string"/>
				<xs:attribute name="hotselectedimage" type="xs:string"/>
				<xs:attribute name="pushedselectedimage" type="xs:string"/>
				<xs:attribute name="focusedselectedimage" type="xs:string"/>
				<xs:attribute name="disabledselectedimage" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Progress">
		<xs:complexContent>
			<xs:extension base="ContentControl">
				<xs:attribute name="fgimage" type="xs:string"/>
				<xs:attribute name="hor" type="xs:boolean"/>
				<xs:attribute name="min" type="xs:integer"/>
				<xs:attribute name="max" type="xs:integer"/>
				<xs:attribute name="value" type="xs:integer"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Edit">
		<xs:complexContent>
			<xs:extension base="Control">
				<xs:attribute name="text" type="xs:string"/>
				<xs:attribute name="font" type="xs:integer"/>
				<xs:attribute name="textcolor" type="Color"/>
				<xs:attribute name="disabledtextcolor" type="Color"/>
				<xs:attribute name="maxchar" type="xs:integer"/>
				<xs:attribute name="readonly" type="xs:boolean"/>
				<xs:attribute name="password" type="xs:boolean"/>
				<xs:attribute name="passwordchar">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="\c"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="normalimage" type="xs:string"/>
				<xs:attribute name="hotimage" type="xs:string"/>
				<xs:attribute name="focusedimage" type="xs:string"/>
				<xs:attribute name="disabledimage" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Scrollbar">
		<xs:complexContent>
			<xs:extension base="Control">
				<xs:attribute name="button1normalimage" type="xs:string"/>
				<xs:attribute name="button1hotimage" type="xs:string"/>
				<xs:attribute name="button1pushedimage" type="xs:string"/>
				<xs:attribute name="button1disabledimage" type="xs:string"/>
				<xs:attribute name="button2normalimage" type="xs:string"/>
				<xs:attribute name="button2hotimage" type="xs:string"/>
				<xs:attribute name="button2pushedimage" type="xs:string"/>
				<xs:attribute name="button2disabledimage" type="xs:string"/>
				<xs:attribute name="thumbnormalimage" type="xs:string"/>
				<xs:attribute name="thumbhotimage" type="xs:string"/>
				<xs:attribute name="thumbpushedimage" type="xs:string"/>
				<xs:attribute name="thumbdisabledimage" type="xs:string"/>
				<xs:attribute name="railnormalimage" type="xs:string"/>
				<xs:attribute name="railhotimage" type="xs:string"/>
				<xs:attribute name="railpushedimage" type="xs:string"/>
				<xs:attribute name="raildisabledimage" type="xs:string"/>
				<xs:attribute name="bknormalimage" type="xs:string"/>
				<xs:attribute name="bkhotimage" type="xs:string"/>
				<xs:attribute name="bkpushedimage" type="xs:string"/>
				<xs:attribute name="bkdisabledimage" type="xs:string"/>
				<xs:attribute name="hor" type="xs:boolean"/>
				<xs:attribute name="linesize" type="xs:integer"/>
				<xs:attribute name="range" type="xs:integer"/>
				<xs:attribute name="value" type="xs:integer"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ScrollViewer">
		<xs:complexContent>
			<xs:extension base="ContentControl">
				<xs:attribute name="vscrollbar">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="true"/>
							<xs:enumeration value="auto"/>
							<xs:enumeration value="show"/>
							<xs:enumeration value="hide"/>
							<xs:enumeration value="none"/>
							<xs:enumeration value="false"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="hscrollbar">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="true"/>
							<xs:enumeration value="auto"/>
							<xs:enumeration value="show"/>
							<xs:enumeration value="hide"/>
							<xs:enumeration value="none"/>
							<xs:enumeration value="false"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Container">
		<xs:complexContent>
			<xs:extension base="Element">
				<xs:group ref="MainGroup" minOccurs="0" maxOccurs="unbounded"/>
				<xs:attribute name="childpadding" type="xs:integer"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DockLayout">
		<xs:complexContent>
			<xs:extension base="Container">
				<xs:attribute name="lastfill" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
